@model WebApplication.Models.TournamentViewModel

@{
    ViewBag.Title = "Tournament";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool registrationStarted = (DateTime)Model.RegistrationStartDate <= DateTime.Now;
    bool tournamentStarted = (DateTime)Model.TournamentStartDate <= DateTime.Now;
    bool registrationEnded = (DateTime)Model.RegistrationEndDate <= DateTime.Now;
    bool isLoggedIn = Session["User.UserId"] != null;
    var userPermission = isLoggedIn ? Model.UserPermission((int)Session["User.UserId"]) : DataLib.Permission.NONE;
}

<div id="Tournament" data-id="@Model.Model.TournamentID">
    <div class="content-header">
        <h2 class="tournamentTitle">Tournament - @Model.Model.Title</h2>
        <div class="tournament-buttons">
            @if (userPermission == DataLib.Permission.TOURNAMENT_ADMINISTRATOR)
            {
                <span class="icon icon-pencil tournament-update"></span>
                <span class="icon icon-cross tournament-delete"></span>
            }
        </div>
        <h3 class="gameTitle">@(Model.Model.GameType != null ? Model.Model.GameType.Title : "")</h3>
    </div>
    @for (int i = 0; i < Model.Tourny.Brackets.Count; i++)
    {
        // Tournament View
        var Bracket = Model.Tourny.Brackets[i];
        String bracketName = "";

        <div class="bracket" data-bracketnum="@i">
            <div class="bracket-info">
                @switch (Bracket.BracketType)
                {
                    case DataLib.BracketTypeModel.BracketType.SINGLE:
                        bracketName = "Single";
                        <div class="name">Single Elemination</div>
                        break;
                    case DataLib.BracketTypeModel.BracketType.DOUBLE:
                        bracketName = "Double";
                        <div class="name">Double Elemination</div>
                        break;
                    case DataLib.BracketTypeModel.BracketType.ROUNDROBIN:
                        bracketName = "RoundRobin";
                        <div class="name">Round Robin</div>
                        break;
                }
            </div>
            <div class="options">
                @if (isLoggedIn && (int)Session["User.UserId"] == Model.Model.CreatedByID)
                {
                    <span class="icon icon-loop2 tournament-reset"></span>
                }
                <span class="icon icon-trophy tournament-standings"></span>
                @if (!Bracket.IsFinalized)
                {
                    Html.RenderPartial("Administrator/_Finalize");
                }
            </div>

            <ul class="list-table bracket">
                @{
                    var bracketViewModel = new WebApplication.Models.BracketViewModel(Bracket);
                    Html.RenderPartial("Brackets/Shared/_Header", bracketViewModel);
                    Html.RenderPartial("Brackets/" + bracketName, bracketViewModel);
                }

                <li class="match-edit-module">
                    <div class="module-background"></div>
                    <div class="module-close"><span class="icon icon-cross close clickable"></span></div>
                    <div class="module-content">
                        <h2>Winner Selection</h2>
                        @{ Html.RenderPartial("Brackets/Shared/_Match", new Tournament.Structure.Match(), new ViewDataDictionary(ViewData)); }
                        <div class="match-submit">
                            <button type="button">Submit Winner</button>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
    }
</div>