@model WebApplication.Models.TournamentViewModel

@{
    ViewBag.Title = "Tournament";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool registrationStarted = (DateTime)Model.RegistrationStartDate <= DateTime.Now;
    bool tournamentStarted = (DateTime)Model.TournamentStartDate <= DateTime.Now;
    bool registrationEnded = (DateTime)Model.RegistrationEndDate <= DateTime.Now;
    bool isLoggedIn = Session["User.UserId"] != null;
    var userPermission = isLoggedIn ? Model.UserPermission((int)Session["User.UserId"]) : DataLib.Permission.NONE;

    ViewBag.Permission = userPermission;
    ViewBag.isLoggedIn = isLoggedIn;
    ViewBag.TournamentId = Model.Model.TournamentID;
}

<div id="Tournament" data-id="@Model.Model.TournamentID">
    <div class="content-header">
        <h2 class="tournamentTitle">Tournament - @Model.Model.Title</h2>
        <div class="tournament-buttons">
            @if (userPermission == DataLib.Permission.TOURNAMENT_ADMINISTRATOR)
            {
                <span class="icon icon-pencil tournament-update"></span>
                <span class="icon icon-cross tournament-delete"></span>
            }
            @if (isLoggedIn && (int)Session["User.UserId"] == Model.Model.CreatedByID)
            {
                <span class="icon icon-loop2 tournament-reset"></span>
            }
            <span class="icon icon-trophy tournament-standings"></span>
        </div>
        <h3 class="gameTitle">@(Model.Model.GameType != null ? Model.Model.GameType.Title : "")</h3>
    </div>
    @{
        if (userPermission == DataLib.Permission.TOURNAMENT_ADMINISTRATOR)
        {
            Html.RenderPartial("_ViewTournament", Model.Tourny, new ViewDataDictionary(ViewData));
        }
        else
        {
            if (registrationStarted && !registrationEnded)
            {
                Html.RenderPartial("_ViewRegistration", Model, new ViewDataDictionary(ViewData));
            }
            else if (registrationEnded && !tournamentStarted)
            {
                <div class="message success">The tournament is currently being prepared. Please wait until the brackets are released.</div>
            }
            else if (tournamentStarted)
            {
                Html.RenderPartial("_ViewTournament", Model.Tourny, new ViewDataDictionary(ViewData));
            }
            else
            {
                <div class="message exception">Yeah..... something went wrong with displaying the tournament</div>
            }
        }

        Html.RenderPartial("Brackets/_Standings", Model.Tourny, new ViewDataDictionary(ViewData));
    }
</div>