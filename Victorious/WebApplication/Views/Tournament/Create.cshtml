@model WebApplication.Models.TournamentViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="TournamentCreate">
    @using (Html.BeginForm("Create", "Tournament", FormMethod.Post))
    {
        <div class="section form-section">
            <h2>Basic Information</h2>
            <ul>
                <li>
                    @Html.LabelFor(t => t.Title)
                    @Html.TextBoxFor(t => t.Title)
                    @Html.ValidationMessageFor(t => t.Title)
                </li>
                <li>
                    @Html.LabelFor(t => t.Description)
                    @Html.TextBoxFor(t => t.Description)
                    @Html.ValidationMessageFor(t => t.Description)
                </li>
                <li>
                    @Html.LabelFor(t => t.GameTypeID)
                    @Html.DropDownListFor(t => t.GameTypeID, new SelectList(Model.GameTypes, "GameTypeID", "Title"), "---Select Game---")
                    @Html.ValidationMessageFor(t => t.GameTypeID)
                </li>
                <li>
                    @Html.LabelFor(t => t.PlatformTypeID)
                    @Html.DropDownListFor(t => t.PlatformTypeID, new SelectList(Model.PlatformTypes, "PlatformID", "PlatformName"), "---Select Platform---")
                    @Html.ValidationMessageFor(t => t.PlatformTypeID)
                </li>
                <li>
                    @Html.LabelFor(t => t.PublicViewing)
                    @Html.CheckBoxFor(t => t.PublicViewing)
                    @Html.ValidationMessageFor(t => t.PublicViewing)
                </li>
                <li>
                    @Html.LabelFor(t => t.PublicRegistration)
                    @Html.CheckBoxFor(t => t.PublicRegistration)
                    @Html.ValidationMessageFor(t => t.PublicRegistration)
                </li>
            </ul>
        </div>
        <div class="section form-section bracketSection">
            <h2>Brackets <span class="icon icon-plus"></span></h2>
            <ul class="hide bracketOrig">
                <li class="rounds">
                    @Html.LabelFor(t => t.BracketTypes)
                    @Html.DropDownList("BracketData[%n%].BracketType", new SelectList(Model.BracketTypes, "BracketTypeID", "TypeName"), "---Select Bracket---")
                </li>
                <li class="swiss rr hide">
                    @Html.LabelFor(t => t.NumberOfRounds)
                    @Html.DropDownList("BracketData[%n%].NumberOfRounds", new SelectList(Model.NumberOfRounds, 0))
                </li>
            </ul>
        </div>
        <div class="section form-section">
            <h2>Tournament Dates</h2>
            <ul>
                <li>
                    @Html.LabelFor(t => t.RegistrationStartDate)
                    @Html.TextBoxFor(t => t.RegistrationStartDate, DateTime.Now.ToShortDateString(), new { @class = "datepicker" })
                    @Html.ValidationMessageFor(t => t.RegistrationStartDate)

                    @Html.TextBoxFor(t => t.RegistrationStartTime, "{0:hh:mm tt}", new { @class = "timepicker" })
                </li>
                <li>
                    @Html.LabelFor(t => t.RegistrationEndDate)
                    @Html.TextBoxFor(t => t.RegistrationEndDate, DateTime.Now.AddDays(1).ToShortDateString(), new { @class = "datepicker" })
                    @Html.ValidationMessageFor(t => t.RegistrationEndDate)

                    @Html.TextBoxFor(t => t.RegistrationEndTime, "{0:hh:mm tt}", new { @class = "timepicker" })
                </li>
                <li>
                    @Html.LabelFor(t => t.TournamentStartDate)
                    @Html.TextBoxFor(t => t.TournamentStartDate, DateTime.Now.AddDays(2).ToShortDateString(), new { @class = "datepicker" })
                    @Html.ValidationMessageFor(t => t.TournamentStartDate)

                    @Html.TextBoxFor(t => t.TournamentStartTime, "{0:hh:mm tt}", new { @class = "timepicker" })
                </li>
                <li>
                    @Html.LabelFor(t => t.TournamentEndDate)
                    @Html.TextBoxFor(t => t.TournamentEndDate, DateTime.Now.AddDays(3).ToShortDateString(), new { @class = "datepicker" })
                    @Html.ValidationMessageFor(t => t.TournamentEndDate)

                    @Html.TextBoxFor(t => t.TournamentEndTime, "{0:hh:mm tt}", new { @class = "timepicker" })
                </li>
                <li>
                    @Html.LabelFor(t => t.CheckinStartDate)
                    @Html.TextBoxFor(t => t.CheckinStartDate, DateTime.Now.AddDays(2).ToShortDateString(), new { @class = "datepicker" })
                    @Html.ValidationMessageFor(t => t.CheckinStartDate)

                    @Html.TextBoxFor(t => t.CheckinStartTime, "{0:hh:mm tt}", new { @class = "timepicker" })
                </li>
                <li>
                    @Html.LabelFor(t => t.CheckinEndDate)
                    @Html.TextBoxFor(t => t.CheckinEndDate, DateTime.Now.AddDays(3).ToShortDateString(), new { @class = "datepicker" })
                    @Html.ValidationMessageFor(t => t.CheckinEndDate)

                    @Html.TextBoxFor(t => t.CheckinEndTime, "{0:hh:mm tt}", new { @class = "timepicker" })
                </li>
            </ul>
        </div>
        <div class="section form-section">
            <button type="submit">Create Tournament</button>
        </div>
    }
</div>