@model WebApplication.Models.ViewModels.TournamentViewModel
@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";

    object attributes = new { };
    object dateAttributes = new { @class = "datepicker" };
    object timeAttributes = new { @class = "timepicker" };

    if (!ViewBag.CanEdit)
    {
        <div class="message warning">No changes can be made to this tournament.</div>
        attributes = new { disabled = "disabled", @readonly = "readonly" };
        dateAttributes = new { @class = "datepicker", disabled = "disabled", @readonly = "readonly" };
        timeAttributes = new { @class = "timepicker", disabled = "disabled", @readonly = "readonly" };
    }
}

<div id="TournamentEdit">
    @using (Html.BeginForm(ViewBag.Create ? "Create" : "Update", "Tournament", FormMethod.Post))
    {
        <div class="section form-section">
            <h2>Basic Information</h2>
            <ul>
                <li>
                    @Html.LabelFor(t => t.Title)
                    @Html.TextBoxFor(t => t.Title, attributes)
                    @Html.ValidationMessageFor(t => t.Title)
                </li>
                <li>
                    @Html.LabelFor(t => t.Description)
                    @Html.TextBoxFor(t => t.Description, attributes)
                    @Html.ValidationMessageFor(t => t.Description)
                </li>
                <li>
                    @Html.LabelFor(t => t.GameTypeID)
                    @Html.DropDownListFor(t => t.GameTypeID, new SelectList(Model.GameTypes, "GameTypeID", "Title"), "---Select Game---", attributes)
                    @Html.ValidationMessageFor(t => t.GameTypeID)
                </li>
                <li>
                    @Html.LabelFor(t => t.PlatformID)
                    @Html.DropDownListFor(t => t.PlatformID, new SelectList(Model.PlatformTypes, "PlatformID", "PlatformName"), "---Select Platform---", attributes)
                    @Html.ValidationMessageFor(t => t.PlatformID)
                </li>
                <li>
                    @Html.LabelFor(t => t.PublicViewing)
                    @Html.CheckBoxFor(t => t.PublicViewing, attributes)
                    @Html.ValidationMessageFor(t => t.PublicViewing)
                </li>
                <li>
                    @Html.LabelFor(t => t.PublicRegistration)
                    @Html.CheckBoxFor(t => t.PublicRegistration, attributes)
                    @Html.ValidationMessageFor(t => t.PublicRegistration)
                </li>
            </ul>
        </div>
        <div class="section bracket-section">
            <h2>
                Brackets
                @if (!ViewBag.InProgress)
                {
                    <span class="icon icon-plus addBracket"></span>
                }
            </h2>
            <ul class="list-table">
                <li class="list-table-body info">
                    @for (int i = 0; i < Model.BracketData.Count; i++)
                    {
                        var bracketData = Model.BracketData[i];

                        <ul class="bracket" data-columns="4">
                            <li class="type column">
                                @Html.LabelFor(t => t.BracketTypes)
                                @Html.DropDownList("BracketData[" + i + "].BracketTypeID", new SelectList(Model.BracketTypes, "BracketTypeID", "TypeName", bracketData.BracketTypeID), "---Select Bracket---", attributes)
                                @Html.ValidationMessageFor(t => t.BracketTypes)
                            </li>
                            <li class="advance-players hide column">
                                @Html.LabelFor(t => t.NumberPlayersAdvance)
                                @Html.DropDownList("BracketData[" + i + "].NumberPlayersAdvance", new SelectList(Model.NumberPlayersAdvance, bracketData.NumberPlayersAdvance), "---Advance Players---", attributes)
                            </li>
                            <li class="round-select hide column">
                                @Html.LabelFor(t => t.NumberOfRounds)
                                @Html.DropDownList("BracketData[" + i + "].NumberOfRounds", new SelectList(Model.NumberOfRounds, bracketData.NumberOfRounds), "---Rounds---", attributes)
                            </li>
                            <li class="group-select hide column">
                                @Html.LabelFor(t => t.NumberOfGroups)
                                @Html.DropDownList("BracketData[" + i + "].NumberOfGroups", new SelectList(Model.NumberOfGroups, bracketData.NumberOfGroups), "---Groups---", attributes)
                            </li>
                        </ul>
                    }
                </li>
            </ul>
            <ul class="bracket hide orig">
                <li class="type column">
                    @Html.LabelFor(t => t.BracketTypes)
                    @Html.DropDownList("BracketData[%n%].BracketTypeID", new SelectList(Model.BracketTypes, "BracketTypeID", "TypeName"), "---Select Bracket---", attributes)
                    @Html.ValidationMessageFor(t => t.BracketTypes)
                </li>
                <li class="advancePlayers hide column">
                    @Html.LabelFor(t => t.NumberPlayersAdvance)
                    @Html.DropDownList("BracketData[%n%].NumberPlayersAdvance", new SelectList(Model.NumberPlayersAdvance, 0), attributes)
                </li>
                <li class="roundSelect hide column">
                    @Html.LabelFor(t => t.NumberOfRounds)
                    @Html.DropDownList("BracketData[%n%].NumberOfRounds", new SelectList(Model.NumberOfRounds, 0), attributes)
                </li>
                <li class="groupSelect hide column">
                    @Html.LabelFor(t => t.NumberOfGroups)
                    @Html.DropDownList("BracketData[%n%].NumberOfGroups", new SelectList(Model.NumberOfGroups, 0), attributes)
                </li>
            </ul>
        </div>
        <div class="section form-section">
            <h2>Tournament Dates</h2>
            <ul>
                <li>
                    @Html.LabelFor(t => t.RegistrationStartDate)
                    @Html.TextBoxFor(t => t.RegistrationStartDate, "{0:MM/dd/yyyy}", dateAttributes)
                    @Html.ValidationMessageFor(t => t.RegistrationStartDate)

                    @Html.TextBoxFor(t => t.RegistrationStartTime, "{0:hh:mm tt}", timeAttributes)
                </li>
                <li>
                    @Html.LabelFor(t => t.RegistrationEndDate)
                    @Html.TextBoxFor(t => t.RegistrationEndDate, "{0:MM/dd/yyyy}", dateAttributes)
                    @Html.ValidationMessageFor(t => t.RegistrationEndDate)

                    @Html.TextBoxFor(t => t.RegistrationEndTime, "{0:hh:mm tt}", timeAttributes)
                </li>
                <li>
                    @Html.LabelFor(t => t.CheckinStartDate)
                    @Html.TextBoxFor(t => t.CheckinStartDate, "{0:MM/dd/yyyy}", dateAttributes)
                    @Html.ValidationMessageFor(t => t.CheckinStartDate)

                    @Html.TextBoxFor(t => t.CheckinStartTime, "{0:hh:mm tt}", timeAttributes)
                </li>
                <li>
                    @Html.LabelFor(t => t.CheckinEndDate)
                    @Html.TextBoxFor(t => t.CheckinEndDate, "{0:MM/dd/yyyy}", dateAttributes)
                    @Html.ValidationMessageFor(t => t.CheckinEndDate)

                    @Html.TextBoxFor(t => t.CheckinEndTime, "{0:hh:mm tt}", timeAttributes)
                </li>
                <li>
                    @Html.LabelFor(t => t.TournamentStartDate)
                    @Html.TextBoxFor(t => t.TournamentStartDate, "{0:MM/dd/yyyy}", dateAttributes)
                    @Html.ValidationMessageFor(t => t.TournamentStartDate)

                    @Html.TextBoxFor(t => t.TournamentStartTime, "{0:hh:mm tt}", timeAttributes)
                </li>
                <li>
                    @Html.LabelFor(t => t.TournamentEndDate)
                    @Html.TextBoxFor(t => t.TournamentEndDate, "{0:MM/dd/yyyy}", dateAttributes)
                    @Html.ValidationMessageFor(t => t.TournamentEndDate)

                    @Html.TextBoxFor(t => t.TournamentEndTime, "{0:hh:mm tt}", timeAttributes)
                </li>
            </ul>
        </div>
        <div class="section userSection">
            <h2>Registered Participants <span class="icon icon-plus addUser"></span></h2>
            <ul class="list-table">
                <li class="list-table-header">
                    <ul data-columns="3">
                        <li class="column">Name</li>
                        <li class="column">Level</li>
                        <li class="column">Checked In</li>
                    </ul>
                </li>
                <li class="list-table-body userInfo">
                    @for (int i = 0; i < Model.Participants.Count; i++)
                    {
                        var user = Model.Participants[i];

                        <ul data-columns="3" class="user">
                            @Html.Hidden("Participants[" + i + "].TournamentUserID", user.TournamentUserID)
                            <li class="column">@user.Name</li>
                            <li class="column">
                                @if (user.PermissionLevel == (int)DatabaseLib.Permission.TOURNAMENT_CREATOR)
                                {
                                    @WebApplication.Models.Tournament.GetPermissionsName(user);
                                }
                                else
                                {
                                    @Html.DropDownList("Participants[" + i + "].PermissionLevel", new SelectList(Model.Permissions, "Key", "Value", user.PermissionLevel), attributes)
                                }
                            </li>
                            <li class="column">
                                <label class="switch">
                                    @Html.CheckBox("Participants[" + i + "].IsCheckedIn", user.IsCheckedIn, attributes)
                                    <span class="slider round"></span>
                                </label>
                            </li>
                        </ul>
                    }
                    <ul data-columns="3" class="hide userOrig">
                        <li class="column">@Html.TextBox("Participants[%n%].Name", "", new { placeholder = "Name" })</li>
                        <li class="column">
                            @Html.DropDownList("Participants[%n%].PermissionLevel", new SelectList(Model.Permissions, "Key", "Value", (int)DatabaseLib.Permission.TOURNAMENT_STANDARD), attributes)
                        </li>

                        <li class="column">
                            <label class="switch">
                                @Html.CheckBox("Participants[%n%].IsCheckedIn", false, attributes)
                                <span class="slider round"></span>
                            </label>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <div class="section broadcaster-section">
            <h2>Broadcasters <span class="icon icon-plus add-broadcaster"></span></h2>
            <ul class="list-table">
                <li class="list-table-header">
                    <ul data-columns="3">
                        <li class="column">Broadcaster Name</li>
                        <li class="column">Broadcast Service</li>
                        <li class="column">&nbsp;</li>
                    </ul>
                </li>
                <li class="list-table-body info">
                    @for(int i = 0; i < Model.Broadcasters.Count; i++)
                    {
                        var brodcaster = Model.Broadcasters[i];

                        <ul data-columns="3" class="broadcaster">
                            <li class="column">
                                @Html.TextBox("Broadcasters[" + i + "].BroadcasterName", brodcaster.BroadcasterName)
                            </li>
                            <li class="column">
                                @Html.DropDownList("Broadcasters[" + i + "].ServiceID", new SelectList(Model.BroadcastServices, "ServiceID", "ServiceName", brodcaster.ServiceID), "Select Service")
                            </li>
                            <li class="column">
                                <span class="icon icon-cross remove-broadcaster"></span>
                            </li>
                        </ul>
                    }

                    <ul data-columns="3" class="hide orig">
                        <li class="column">
                            @Html.TextBox("Broadcasters[%n%].BroadcasterName")
                        </li>
                        <li class="column">
                            @Html.DropDownList("Broadcasters[%n%].ServiceID", new SelectList(Model.BroadcastServices, "ServiceID", "ServiceName"), "Select Service")
                        </li>
                        <li class="column">
                            <span class="icon icon-cross remove-broadcaster"></span>
                        </li>
                    </ul>
                </li>
            </ul>
            </div>
        <div class="section form-section rules">
            <h2>Tournament Specific Rules</h2>
            @Html.TextAreaFor(x => x.TournamentRules, attributes)
        </div>
        <div class="section">
            @if (!ViewBag.InProgress)
            {
                <button type="submit">Accept Changes</button>
            }
        </div>
    }
</div>