@model Tournament.Structure.IBracket

<li class="list-table-header">
    <ul class="border" data-columns="@Model.NumberOfRounds">
        @for (int i = 1; i <= Model.NumberOfRounds; i++)
        {
            String displayTitle = "Round " + i;
            if (i == Model.NumberOfRounds)
            {
                displayTitle = "Finals";
            }
            else if (i == Model.NumberOfRounds - 1)
            {
                displayTitle = "Semi-Finals";
            }
            else if (i == Model.NumberOfRounds - 2)
            {
                displayTitle = "Quarter Finals";
            }

            <li class="column">@displayTitle</li>
        }
    </ul>
</li>
<li class="list-table-body">
    <ul data-columns="@Model.NumberOfRounds">
        @for (int roundNum = 1; roundNum <= Model.NumberOfRounds; roundNum++)
        {
            var matches = Model.GetRound(roundNum);

            <li class="round" data-round="@roundNum">
                @foreach (var match in matches)
                {
                    var challenger = match.Players[(int)Tournament.Structure.PlayerSlot.Challenger] != null ? match.Players[(int)Tournament.Structure.PlayerSlot.Challenger] : new Tournament.Structure.User();
                    var defender = match.Players[(int)Tournament.Structure.PlayerSlot.Defender] != null ? match.Players[(int)Tournament.Structure.PlayerSlot.Defender] : new Tournament.Structure.User();

                    if (challenger.Id == -1)
                    {
                        challenger.Name = "Winner from " + match.PreviousMatchNumbers[1];
                    }
                    if (defender.Id == -1)
                    {
                        defender.Name = "Winner from " + match.PreviousMatchNumbers[0];
                    }

                    ViewBag.Players = match.Players;
                    ViewBag.Challenger = challenger;
                    ViewBag.Defender = defender;
                    ViewBag.matchNum = match.MatchNumber;
                    ViewBag.IsReady = match.IsReady;

                    Html.RenderPartial("Brackets/_Match", match, new ViewDataDictionary(ViewData));
                }
            </li>
        }
    </ul>
</li>