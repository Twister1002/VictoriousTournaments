@model WebApplication.Models.TournamentViewModel

@{
    var Bracket = Model.Tourny.Brackets[0];
    var isLoggedIn = Session["User.UserId"] != null;
    var isAdministrator = isLoggedIn && (int)Session["User.UserId"] == Model.Model.CreatedByID;
}

<li class="list-table-header">
    <ul class="border" data-columns="@Bracket.NumberOfRounds">
        @for (int i = 1; i <= Bracket.NumberOfRounds; i++)
        {
            String displayTitle = "Round " + i;
            if (i == Bracket.NumberOfRounds)
            {
                displayTitle = "Finals";
            }
            else if (i == Bracket.NumberOfRounds - 1)
            {
                displayTitle = "Semi-Finals";
            }
            else if (i == Bracket.NumberOfRounds - 2)
            {
                displayTitle = "Quarter Finals";
            }

            <li class="column">@displayTitle</li>
        }
    </ul>
</li>
<li class="list-table-body">
    <ul data-columns="@Bracket.NumberOfRounds">
        @for (int roundNum = 1; roundNum <= Bracket.NumberOfRounds; roundNum++)
        {
            var matches = Bracket.GetRound(roundNum);

            <li class="round" data-round="@roundNum">
                @foreach (var match in matches)
                {
                    var challenger = match.Players[(int)Tournament.Structure.PlayerSlot.Challenger] != null ? match.Players[(int)Tournament.Structure.PlayerSlot.Challenger] : new Tournament.Structure.User();
                    var defender = match.Players[(int)Tournament.Structure.PlayerSlot.Defender] != null ? match.Players[(int)Tournament.Structure.PlayerSlot.Defender] : new Tournament.Structure.User();

                    ViewBag.Challenger = challenger;
                    ViewBag.Defender = defender;
                    ViewBag.isLoggedIn = isLoggedIn;
                    ViewBag.isAdministrator = isAdministrator;
                    ViewBag.matchNum = match.MatchNumber;
                    ViewBag.IsReady = match.IsReady;

                    Html.RenderPartial("Brackets/_Match", new ViewDataDictionary(ViewData));
                }
            </li>
        }
    </ul>
</li>